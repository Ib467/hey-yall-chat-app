{"version":3,"sources":["components/RegistrationForm.js","views/Login.js","components/LogoutButton.js","views/Webcam.js","views/Inside.js","App.js","serviceWorker.js","index.js","views/hey-yall.jpg","logo.svg"],"names":["RegistrationForm","useState","firstName","lastName","email","password","passwordConfirmation","formState","setFormState","handleChange","event","target","name","value","onSubmit","preventDefault","axios","post","withCredentials","then","navigate","catch","console","log","class","placeholder","onChange","type","Login","props","setEmail","setPassword","err","setErr","src","logo","alt","style","color","response","setLoggedName","data","e","LogoutButton","Button","variant","onClick","delete","CaptureImage","state","imageData","imageName","saveImage","setRef","webcam","capture","imageSrc","getScreenshot","setState","onClickRetake","persist","onClickSave","previousState","handleSaveSubmit","imageObject","image_name","job_id","image_data","saveForm","window","scrollTo","top","behavior","audio","height","ref","this","screenshotFormat","width","videoConstraints","facingMode","className","scrollToTop","React","Component","socket","io","connect","Inside","message","chat","setChat","useEffect","on","onTextChange","loggedName","setFile","filename","setFilename","emit","TextField","label","id","files","htmlFor","aria-label","map","index","key","Webcam","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.e521a9d1.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default function RegistrationForm() {\r\n    const [formState, setFormState] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirmation: ''\r\n    });\r\n\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        axios.post('http://localhost:8000/api/users', formState, {\r\n            withCredentials: true\r\n\r\n        })\r\n            .then(() => {\r\n                navigate('/inside')\r\n            })\r\n            .catch(() => console.log);\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* <div>\r\n                <label>First Name</label>\r\n                <input\r\n                    name=\"firstName\"\r\n                    value={formState.firstName}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Last Name</label>\r\n                <input\r\n                    name=\"lastName\"\r\n                    value={formState.lastName}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <label>Email</label>\r\n                <input\r\n                    name=\"email\"\r\n                    value={formState.email}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <label>Password</label>\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={formState.password}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Password Confirmation</label>\r\n                <input\r\n                    name=\"passwordConfirmation\"\r\n                    type=\"password\"\r\n                    value={formState.passwordConfirmation}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <button>Submit</button> */}\r\n\r\n\r\n\r\n            <div class=\"login-wrapper is-grouped is-grouped-right\">\r\n                <h3 class=\"is-size-1\"> Register</h3>\r\n\r\n                <div class=\"field\">\r\n                    <div class=\"control\">\r\n                        <input class=\"input\" name=\"firstName\" placeholder=\"First Name\"\r\n                        value={formState.firstName}\r\n                        onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    \r\n                    <div class=\"control\">\r\n                        <input class=\"input\" name=\"lastName\" placeholder=\"Last Name\" \r\n                         value={formState.lastName}\r\n                         onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field \">\r\n                        <p class=\"control has-icons-left has-icons-right\">\r\n                        <input class=\"input\" name='email' type=\"email\" placeholder=\"Email\" \r\n                        value={formState.email}\r\n                        onChange={handleChange} \r\n                        />\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                        <span class=\"icon is-small is-right\">\r\n                            <i class=\"fas fa-check\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"field \" >\r\n                        <p class=\"control has-icons-left\">\r\n                            <input class=\"input\" name=\"password\" type=\"password\" placeholder=\"Password\" \r\n                            value={formState.password}\r\n                            onChange={handleChange}\r\n                            />\r\n                            <span class=\"icon is-small is-left\">\r\n                                <i class=\"fas fa-lock\"></i>\r\n                            </span>\r\n                        </p>\r\n                </div>\r\n                <div class=\"field \" >\r\n                        <p class=\"control has-icons-left\">\r\n                            <input class=\"input\" name=\"passwordConfirmation\" type=\"password\" placeholder=\"Password Confirmation\" \r\n                            value={formState.passwordConfirmation}\r\n                            onChange={handleChange}\r\n                            />\r\n                            <span class=\"icon is-small is-left\">\r\n                                <i class=\"fas fa-lock\"></i>\r\n                            </span>\r\n                        </p>\r\n                </div>\r\n\r\n                <button class=\"button is-success\">\r\n                                Register\r\n                            </button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport RegistrationForm from '../components/RegistrationForm';\r\nimport logo from './hey-yall.jpg';\r\n\r\nexport default function Login(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [err, setErr] = useState('');\r\n    const [loggedName, setLoggedName] = useState('')\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        setErr('');\r\n        axios.post('http://localhost:8000/api/users/login', {\r\n            email,\r\n            password\r\n        }, { withCredentials: true })\r\n            .then(response => {\r\n                props.setLoggedName(response.data.name);\r\n                console.log(response.data.name);\r\n                navigate('/inside')\r\n            })\r\n            .catch(() => setErr('Please check your credentials!'));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n\r\n       \r\n        <div class=\"notification container login_container\">\r\n        <img src={logo} alt='howdy' style={{\"height\" : \"25%\", \"width\" : \"25%\"}}/>\r\n            <div class=\"\">\r\n                {/* <h1>Login/Reg</h1> */}\r\n                {err && (\r\n                    <p style={{ color: 'red' }}>{err}</p>\r\n                )}\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    \r\n                    {/* <div>\r\n                        <label>Email</label>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n\r\n                        />\r\n                    </div> */}\r\n                    {/* <div>\r\n                        <label>password</label>\r\n                        <input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n\r\n                        />\r\n                    </div> */}\r\n                <div class=\"login-wrapper is-grouped is-grouped-left notification\">\r\n                <h3 class=\"is-size-1\"> Login </h3>\r\n                    <div class=\"field \">\r\n                        <p class=\"control has-icons-left has-icons-right\">\r\n                        <input class=\"input\" type=\"email\" placeholder=\"Email\"  value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                        <span class=\"icon is-small is-left\">\r\n                            <i class=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                        <span class=\"icon is-small is-right\">\r\n                            <i class=\"fas fa-check\"></i>\r\n                        </span>\r\n                    </p>\r\n                    </div>\r\n                    <div class=\"field \" >\r\n                        <p class=\"control has-icons-left\">\r\n                            <input class=\"input\" type=\"password\" placeholder=\"Password\" \r\n                            onChange={e => setPassword(e.target.value)}\r\n                            />\r\n                            <span class=\"icon is-small is-left\">\r\n                                <i class=\"fas fa-lock\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"field is-grouped is-grouped-left\" >\r\n                        <p class=\"control\">\r\n                            <button class=\"button is-success\">\r\n                                Login\r\n                            </button>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                    {/* <button>Submit</button> */}\r\n                </form>\r\n            </div>\r\n\r\n                \r\n                <div class=\"notification\">\r\n                    {/* This container is <strong>centered</strong> on desktop. */}\r\n                    <RegistrationForm />\r\n                </div>\r\n        </div>\r\n\r\n\r\n       \r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router'\r\n\r\n//styling \r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function LogoutButton() {\r\n    function handleClick() {\r\n        axios.delete('http://localhost:8000/api/users/logout', {\r\n            withCredentials: true\r\n        })\r\n        .then(() => navigate('/'))\r\n        .catch(console.log)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {/* <button onClick={handleClick}>Log Out now</button> */}\r\n        <Button variant=\"contained\" color=\"primary\"\r\n        onClick={handleClick}>\r\n        Log Out Now</Button>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nimport { navigate } from '@reach/router';\r\n\r\nclass CaptureImage extends React.Component {\r\n    // using state to save the image in base64 image value to imageData\r\n    state = {\r\n        imageData: null,\r\n        imageName: \"\",\r\n        saveImage: false\r\n    }\r\n\r\n    // used to activate the webcam\r\n    setRef = (webcam) => {\r\n        this.webcam = webcam;\r\n    }\r\n\r\n    // used to capture the photo\r\n    capture = () => {\r\n        const imageSrc = this.webcam.getScreenshot();\r\n        this.setState({\r\n            imageData: imageSrc\r\n        })\r\n        \r\n    };\r\n\r\n    // this allows for a retake\r\n    onClickRetake = (e) => {\r\n        e.persist();\r\n        this.setState({\r\n            imageData: null\r\n        })\r\n    }\r\n    \r\n    // this is used to change the saveImage state, \r\n    // allows user to turn off the webcam after capture w/ conditional statement\r\n    onClickSave = (e) => {\r\n        e.persist();\r\n        this.setState((previousState) => {\r\n            return{\r\n                saveImage: !previousState.saveImage\r\n            }\r\n        })\r\n    }\r\n\r\n    // this allows the user to change the image file name\r\n    handleChange = (e) => {\r\n        e.persist();\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // this is suppose to handle the save photo button\r\n    // but currently no database to save the base64 image\r\n    // need to create a function to handle the saveJobImage\r\n    handleSaveSubmit = (e) => {\r\n        e.preventDefault();\r\n        let imageObject = {\r\n            image_name: this.state.image_name,\r\n            job_id: this.props.job_id,\r\n            image_data: this.state.imageData\r\n        }\r\n        console.log(imageObject);\r\n        // this.props.saveJobImage(imageObject);\r\n    }\r\n    scrollToTop() {\r\n        window.scrollTo({\r\n          top: 0,\r\n          behavior: \"smooth\"\r\n        });\r\n      }\r\n\r\n    saveForm = () => {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSaveSubmit}>\r\n                    <p>\r\n                        <label>Image Name:</label>\r\n                        <input\r\n                            name=\"image_name\"\r\n                            value={this.state.image_name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input type='submit' value='Save'/>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //this renders the webcam components\r\n    render() {\r\n        const videoConstraints ={\r\n            width: 1280,\r\n            height:720,\r\n            facingMode: 'user',\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            <Webcam\r\n                audio={false}\r\n                height={350}\r\n                ref={this.setRef}\r\n                screenshotFormat='image/jpeg'\r\n                width={350}\r\n                videoConstraints={videoConstraints}\r\n            />\r\n            <div className=\"button-container\">\r\n               <button class=\"button is-info\" onClick={this.capture}>Capture Photo</button>\r\n            </div>\r\n            {''}\r\n            {this.state.imageData ?\r\n            <div>\r\n                    <p><img src ={this.state.imageData} alt=\"\"/></p>\r\n                    <span><button onClick={this.onClickRetake}>Retake Photo</button></span> {' '}\r\n                    <span><button onClick={this.onClickSave}>Save Photo</button></span>\r\n                    {this.state.saveImage ? this.saveForm() : null}\r\n                </div>\r\n            : null}\r\n\r\n            {/* button does not work due to not being logged in */}\r\n           \r\n            <button class=\"button is-info\" onClick={() => this.scrollToTop()}>Go to Chat</button>\r\n\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default CaptureImage;","import React, { useEffect, useState, Fragment } from 'react';\r\nimport LogoutButton from '../components/LogoutButton';\r\nimport { navigate } from '@reach/router';\r\nimport io from 'socket.io-client';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios'\r\nimport Webcam from './Webcam';\r\n\r\n\r\n// import VideocamIcon from '@material-ui/icons/Videocam';\r\n// import SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\n\r\nconst socket = io.connect('http://localhost:8000')\r\n\r\nexport default function Inside(props) {\r\n    const [state, setState] = useState({ message: '', name: '' })\r\n    const [chat, setChat] = useState([])\r\n\r\n    useEffect(() => {\r\n        socket.on('message', ({ name, message }) => {\r\n            setChat([...chat, { name, message }])\r\n        })\r\n    })\r\n\r\n\r\n    const onTextChange = e => {\r\n        setState({ ...state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onMessageSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { name, message } = state\r\n        socket.emit('message', { name, message })\r\n        setState({ message: '', name })\r\n    }\r\n\r\n\r\n    const renderChat = () => {\r\n        return chat.map(({ name, message }, index) => (\r\n            <div key={index}>\r\n                <h3>\r\n                    {name} : <span>{message}</span>\r\n                </h3>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.loggedName == '') {\r\n            navigate('/')\r\n        }\r\n    })\r\n\r\n\r\n    //File upload functionality\r\n\r\n    // const FileUpload = () => {\r\n    const [file, setFile] = useState(''); //hooks to set state of the file\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [uploadedFile, setUploadedFile] = useState({});\r\n\r\n    const onChange = e => {\r\n        setFile(e.target.files[0]);\r\n        setFilename(e.target.files[0].name);\r\n    };\r\n\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const res = await axios.post('/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            const { fileName, filePath } = res.data;\r\n\r\n            setUploadedFile({ fileName, filePath })\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                console.log('There was a problem with the server')\r\n            } else {\r\n                console.log(err.response.data.msg)\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n        <div class=\"chat-app\">\r\n            {/* <LogoutButton /> */}\r\n            {/* <Typography variant=\"h3\" component=\"h3\"> h1. Heading</Typography> */}\r\n            <div class=\"header-section\"> Hello, {props.loggedName} <LogoutButton />\r\n\r\n            </div>\r\n\r\n            <form onSubmit={onMessageSubmit}>\r\n\r\n\r\n                <h2 class=\"title is-2\">Hey Y'all!  Messenger</h2>\r\n\r\n                {/* <h1>Messenger</h1> */}\r\n\r\n                <div className=\"name-field\">\r\n                    <TextField name=\"name\" onChange={e => onTextChange(e)} value={state.name} label=\"Name\" />\r\n                </div>\r\n                <div >\r\n                    <TextField name=\"message\" onChange={e => onTextChange(e)} value={state.message} id=\"outlined-multiline-static\" variant=\"outlined\" label=\"Message\" />\r\n                </div>\r\n\r\n                {/* <Fragment>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"custom-file mb-4\">\r\n                            <input type=\"file\" className=\"custom-file-input\" id=\"customFile\"\r\n                                onChange={onChange}\r\n                            />\r\n                            <label className=\"custom-file-label\" htmlFor=\"customFile\">{filename}</label>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"upload\" className=\"btn btn-primary btn-block mt-4\"></input>\r\n                    </form>\r\n                </Fragment> */}\r\n\r\n                <div class=\"file has-name\">\r\n                    <label class=\"file-label\">\r\n                        <input class=\"file-input\" type=\"file\" name=\"resume\"\r\n                            onChange={onChange}\r\n                        />\r\n                        <span class=\"file-cta\">\r\n                            <span class=\"file-icon\">\r\n                                <i class=\"fas fa-upload\"></i>\r\n                            </span>\r\n                            <span class=\"file-label\">\r\n                                Choose a file…\r\n                                </span>\r\n                        </span>\r\n                        <span class=\"file-name\" htmlFor=\"customFile\">\r\n\r\n                            {filename}\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n\r\n\r\n                <button class=\"button is-success\">Send Message</button>\r\n                {/* <button>Send Message</button> */}\r\n            </form>\r\n            {/* <div className=\"render-chat\" >\r\n                    <h1>Chat Log</h1>\r\n                    {renderChat()}\r\n                </div> */}\r\n            <article class=\"message is-link messsage-box\">\r\n                <div class=\"message-header\">\r\n                    <p>Chat Log</p>\r\n                    <button class=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div class=\"message-body\">\r\n                    {renderChat()}\r\n                </div>\r\n            </article>\r\n\r\n            <div className=\"render-video\">\r\n                <Webcam />\r\n            </div>\r\n        </div >\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Router, Redirect, Link, navigate} from '@reach/router';\nimport axios from 'axios';\nimport Login from './views/Login';\nimport Inside from './views/Inside';\nimport Registration from './components/RegistrationForm'\n\n\nimport Webcam from './views/Webcam';\n\n\nfunction App() {\n  const [loggedName, setLoggedName] = useState('')\n  return (\n    <div className=\"App\">\n      \n        <Router>\n          <Login loggedName={loggedName} setLoggedName={setLoggedName} path='/' />\n          <Inside loggedName={loggedName} setLoggedName={setLoggedName} path='inside' />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hey-yall.d0c57f41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}